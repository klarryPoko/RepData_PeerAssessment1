View(data)
View(fin)
View(fin)
fin<-ddply(d, .(Activity),meanV1 = mean(d$tBodyAcc-mean()-X))
str(fin)
str(d)
head(fin)
head(fin$tBodyAcc-mean()-X)
head(fin$Subjects)
head(fin[ ,Subjects])
head(fin[ Subjects,])
grp<-group_by(d,d$Subjects,d$Activity)
library(dplyr)
d1<-d[as.factor(d$Subjects), as.factor(d$Activity), ]
str(d1)
View(fi)
View(fi)
View(fi)
View(fi)
View(fi)
View(`d1`)
d1<-d[as.factor(d$Subjects), as.factor(d$Activity) ]
d1<-d[as.factor(d$Subjects) ]
str(d1)
d1<-d[,as.character(d$Subject) ]
d1<-d[as.character(d$Subject), ]
str(d1)
d1<-d[,as.character(d$Subject) ]
d1<-d[,d$Subject ]
d1<-d[,d$Subject ]
d1<-d[d$Subject ]
d1<-d$Subject
d1<-as.factor(d$Subject)
d2<-as.factor(d$Activity)
library(dplyr)
install.packages(dplyr)
fin<-ddply(d, .(Activity),meanV1 = mean(d$tBodyAcc-mean()-X))
install.packages(dplyr)
install.packages(plyr)
head(select(d,Subjects:Activity))
?select
?plyr
?dplyr
install.packages('dplyr', repos='http://cran.rstudio.com/')
library(dplyr)
head(select(d,Subjects:Activity))
grp<-group_by(d,d$Subjects,d$Activity)
source('C:/Users/klpok_000.OWNER-PC/Desktop/DataScience/Data/run_analysis.r')
source('C:/Users/klpok_000.OWNER-PC/Desktop/DataScience/Data/run_analysis.r')
GCProj()
View(Subs)
str(Subs)
source('C:/Users/klpok_000.OWNER-PC/Desktop/DataScience/Data/run_analysis.r')
GCProj()
d<-GCProj()
str(d)
grp<-group_by(d,d$Subjects,d$Activity)
grp<-group_by(d,Subjects,Activity)
str(grp)
grp<-group_by(d,d$Subjects,d$Activity) %>% summarise_each(funs(mean))
grp<-group_by(d,Subjects,Activity) %>% summarise_each(funs(mean))
str(grp)
w<-GCProj()
source('C:/Users/klpok_000.OWNER-PC/Desktop/DataScience/Data/run_analysis.r')
source('C:/Users/klpok_000.OWNER-PC/Desktop/DataScience/Data/run_analysis.r')
w<-GCProj()
?write.table
write.table(w,file="tidyData.txt", row.name=FALSE)
n<-colnames(W)
n<-colnames(w)
str(n)
write.table(n,file="varnames.txt", row.name=FALSE)
dt<-read.csv("./getdata-data-ss06hid.csv")
dt<-read.csv("./getdata-data-ss06hid.csv")
str(dt)
agl<-dt[,dt$ACR==3 & dt$AGS==6]
agl<-dt[,dt$ACR==3]
agl<-dt[(dt$ACR==3 & dt$AGS==6),]
str(agl)
agl<-dt[(dt$ACR==3 & dt$AGS==6)]
agl<-dt[,(dt$ACR==3)]
agl<-dt[(dt$ACR==3),]
str(agl)
agl<-dt[(dt$ACR==3 & dt$AGS==6),]
agl<-dt[which(dt$ACR==3 & dt$AGS==6),]
agl<-dt[which(dt$ACR==3 & dt$AGS==6)]
agl<-dt$ACR[(dt$ACR==3 & dt$AGS==6),]
agl<-dt$ACR[(dt$ACR==3),]
agl<-dt[which(dt$ACR==3 & dt$AGS==6),]
agl<-dt[which(dt$ACR==3 & dt$AGS==6),]
head(dt)
agl<-dt[which(dt$ACR==3 & dt$AGS==6),]
head(agl)
head(agl, n=3)
install.packages(jpeg)
install.packages("jpeg")
library(jpeg)
dt<-read.jpeg("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg ")
dt<-readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg ")
dt<-readJPEG("./jeff.jpg ")
dt<-readJPEG("./jeff.jpg ", native=TRUE)
summary(dt)
dt<-readJPEG("./jeff.jpg ", native=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg ", destfile="./jeff.jpeg", method=curl)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg ", destfile="./jeff.jpeg", method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg ", destfile="./jeff.jpeg")
jeff<-readJPEG("./jeff.jpg ", native=TRUE)
head(jeff, n=3)
quantile(jeff,na.rm=TRUE)
quantile(jeff,probs=c(.3, .8),na.rm=TRUE)
summary(jeff)
quantile(jeff,probs=c(.3, .8),na.rm=TRUE)
quantile(jeff,probs=c(.3, .8))
jeff<-readJPEG("./jeff.jpg ", native=TRUE)
quantile(jeff,probs=c(.3, .8))
quantile(jeff)
quantile(jeff,probs=c(.3, .8))
jeff<-readJPEG("./jeff.jpg ", native=TRUE,  mode="wb")
jeff<-readJPEG("./jeff.jpg ", native=TRUE)
quantile(jeff,probs=c(.3, .8),  mode="wb")
swirl()
library(swirl)
swirl()
mydf<-read.csv("path2csv", stringFactors=FALSE)
mydf<-read.csv(path2csv, stringAsFactors=FALSE)
mydf<-read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id,package, country)
5:20
select(cran, r_arch:country)
select(cran,country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version=="3.1.1", country=="US")
?Comparison
filter(cran, r_version<="3.0.2", country=="IN")
filter(cran, r_version<="3.0.2", country=="US" | country=="IN")
filter(cran, country=="US" | country=="IN")
filter(cran, size>100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na())
filter(cran, !is.na(r_version))
select(cran, size:ip_id)
cran2<-select(cran, size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id)
)
arrange(cran2,package,ip_id)
arrange(cran2,country, desc(r_version),ip_id)
cran3<-select(cran, ip_id, package, size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20, size_gb=size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(cran, ave_bytes=mean(size))
summarize(cran, avg_bytes=mean(size))
library("swirl")
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
rm("fi")
cran
?group_by
by_package<-group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs=.99)
top_counts<-filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts, desc(count)
)
view(top_counts_sorted)
View(top_counts_sorted)
quantile(pack_sum$unique, probs=.99)
top_unique<-filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique, unique)
top_unique_sorted<-arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count,-grade)
student2
students2
gather(students2, sex_class, count,-grade)
res<-gather(students2, sex_class, count,-grade)
res
?separate
separate(res, col=sex_class, into=c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
?mutate
submit()
submit()
?extract_numeric
extract_numeric("class5")
?mutate
extract_numeric(students3$class)
skip()
student4
students4
submit()
submit()
submit()
submit()
submit()
passed
failed
mutate(passed, status, "passed")
mutate(passed, status="passed")
passed<-passed %>% mutate(status="passed")
failed<-failed %>% mutate(status="failed")
bind_rows(passed, failed)
sat
?select
?separate
submit()
submit()
submit()
submit()
rm(failed)
rm(fin)
rm(gradebook)
rm(grp)
library("swirl")
swirl()
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(lubridate)
help(package = lubridate)
this_day<-today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment<-now()
this_moment
minute(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd(192012)
ymd("192012")
ymd("1/9/2012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8,minutes=34,seconds=55)
this_moment
this_moment<-update(this_moment)
this_moment<-update(this_moment, hours=10, minutes=16, seconds=0)
this_moment
nyc<-now("America/New_York")
nyc
depart<-nyc+days(2)
depart
update(depart, hours=17, minutes=34)
depart<-update(depart, hours=17, minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long<-new_interval(last_time, arrive, tzone=attr(last_time,"Asia/Hong Kong"))
how_long<-new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
q4<-read.csv("./getdata-data-ss06hid.csv")
str(q4)
a1<-strsplit(names(q4), "wgtp")
str(a1)
a123<-a1[123]
a123
a2<-read.csv("./getdata-data-GDP.csv")
str(a2)
a2<-read.csv("./getdata-data-GDP.csv")
str(a2)
head(a2)
tail(a2)
a3<-grep("^United",X.2)
a3<-grep("^United",a2$X.2)
a3
a4<-read.csv("./getdata-data-GDP.csv")
str(a4)
a5<read.csv("./getdata-data-EDSTATS_Country.csv")
a5<-read.csv("./getdata-data-EDSTATS_Country.csv")
str(a5)
str(a4)
t<-c(a4$X,a4[2])
str(t)
t<-a4[,c(1,2)]
str(t)
str(a5)
str(a2)
a2x3<-as.numeric(a2$X.3)
str(a2x3)
head(a2)
a2x2<-as.numeric(a2$X.2)
str(a2x2)
a2<-read.csv("./getdata-data-GDP.csv")
str(a2)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("http://www.quantmod.com/")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("http:\\www.quantmod.com\")
)
q()
install.packages("http:/www.quantmod.com/")
install.packages("http:/www.quantmod.com/")
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
str(amzn)
sampleTimes = index(amzn)
str(sampleTimes)
dt<-format(sampleTimes,"%a %b %d")
head(dt)
dt<-format(sampleTimes,"%a %b %d %y")
head(dt)
day<-format(sampleTimes,"%a")
head(day)
year<-format(sampleTimes,"%y")
head(year)
y12<-sum(year["12"])
Ly12<-(year["12"])
str(Ly12)
Ly12<-(year[12])
str(Ly12)
str(year)
Ly12<-(year[]="12")
str(Ly12)
Ly12<-(year[]=="12")
str(Ly12)
Ly12<-(year[1]=="12")
str(Ly12)
Ly12<-(year=="12")
str(Ly12)
str(year)
year<-format(sampleTimes,"%y")
head(year)
Ly12<-(year[]=="12")
str(Ly12)
y12<-as.numeric(Ly12)
str(y12)
ans<-sum(y12)
ans
year<-format(sampleTimes,"%y")
str(day)
LdM<-(day[]=="Mon")
head(LdM)
dM<-as.numeric(LdM)
head(dM)
ans<-sum(dM)
ans
head(dt)
t<-dM+year
t<-dM+y12
head(t)
head(t, n=30)
head(t, n=300)
t
lans<-as.numeric(t==2)
lans
ans<-sum(lans)
ans
year
dt
?quantmod
pm99<-read.table("./annual_all_1999.csv")
pm99<-read.cvs("./annual_all_1999.csv")
pm99<-read.csv("./annual_all_1999.csv")
str(pm1999)
str(pm99)
pm99<-read.csv("./annual_all_1999.csv", na.string="")
dim(pm99)
d<-read.table("./lrw08cy5.dat")
str(d)
head(d, n=1)
instal.packages(knitr)
install.packages(knitr)
install.packages("knitr")
install.packages("markdown")
install.packages("Markdown")
install.packages(Markdown)
install.packages("./Markdown")
install.packages("www.cran.org/Markdown")
library(knitr)
install.packages("www.r-project.org/nosvn/pandoc/knitr.html")
install.packages('knitr')
install.packages('knitr', repos='http://cran.rstudio.org')
install.packages('markdown', repos='http://cran.rstudio.org')
install.packages('knitr', repos=' http://cran.r-project.org/web/packages/knitr/index.html')
install.packages('knitr', repos=' http://streaming.stat.iastate.edu/CRAN/src/contrib/knitr_1.4.1.tar.gz')
install.packages('knitr')
install.packages("lattice")
library(lattice)
library(markdown)
library(Markdown)
install.packages(lattice)
install.packages("knitr")
install.packages("colorspace")
install.packages('knitr', contriburl=' http://cran.r-project.org/web/packages/knitr/index.html')
install.packages("colorspace")
install.packages("colorspace")
install.packages("knitr")
install.packages("devtools")
install.packages("knitr", type="source")
install.packages("markdown", type="source")
library(ggplot2)
library(lattice)
library(markdown)
library(markdown)
library(knitr)
library(slidify)
install.packages(slidify)
install.packages(slidify, type=source)
install.packages("slidify", type="source")
activity<-read.csv("./Activity")
activity<-read.csv("./Activity")
act<-read.csv("./activity.csv")
str(act)
head(act)
head(act, n=50)
tail(act, n=50)
head(act, n=150)
head(act, n=250)
head(act, n=350)
head(act, n=550)
head(act, n=550)
act
setwd("C:/Users/klpok_000.OWNER-PC/RepData_PeerAssessment1")
act<-read.csv("./activity.csv")
str(act)
act[,2]<-as.Date(act$date)
str(act)
summary(act)
source('C:/Users/klpok_000.OWNER-PC/Desktop/DataScience/Data/EDA_Proj2/plot6.r')
plot6()
act<-read.csv("./activity.csv")
ans<-tapply(act~date, mean())
ans<-tapply(act~date, mean(act$steps))
ans<-tapply(act~date, mean(act_date$steps))
ans<-tapply(act~date, mean(act~date$steps))
ans<-tapply(act~date, mean(act))
ans<-tapply(act, mean(act))
ans<-tapply(act, mean(act$steps))
ans<-tapply(mean(act$steps))
ans<-tapply(act~date, mean())
ans<-tapply(act~date, mean(steps))
ans<-tapply(act~date, mean(act$steps))
ans<-tapply(act,~date, mean(act$steps))
ans<-tapply(act,~date, mean=mean(steps))
ans<-tapply(act,~date, summarize, mean=mean(steps))
ans<-tapply(act,~date, summarise, mean=mean(steps))
ans<-ddply(act,~date, summarise, mean=mean(steps))
library(plyr)
ans<-ddply(act,~date, summarise, mean=mean(steps))
ans
ans<-ddply(act,~date, summarise, sum=sum(steps))
ans
hist(act$date,ans)
